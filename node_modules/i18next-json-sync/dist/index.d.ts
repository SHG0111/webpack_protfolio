export interface Options {
    /** Audit files in memory instead of changing them on the filesystem and throw an error if any changes would be made */
    check?: boolean;
    /** Glob pattern for the resource JSON files */
    files?: string;
    /** Primary localization language. Other language files will be changed to match */
    primary?: string;
    /** Language files to create if they don't exist, e.g. ['es, 'pt-BR', 'fr'] */
    createResources?: string[];
    /** Space value used for JSON.stringify when writing JSON files to disk */
    space?: string | number;
    /** Line endings used when writing JSON files to disk */
    lineEndings?: LineEndings;
    /** Insert a final newline when writing JSON files to disk */
    finalNewline?: boolean;
    /** Use empty string for new keys instead of the primary language value */
    newKeysEmpty?: boolean;
}
export declare type DirectoryMap = Record<string, FileMap>;
export declare type FileMap = Record<string, object>;
export declare type LineEndings = 'LF' | 'CRLF';
export default function sync({ check: isReportMode, files, primary: primaryLanguage, createResources: createFiles, space: jsonSpacing, lineEndings, finalNewline, newKeysEmpty }: Options): void;
